///////////////////////////////////////////////////////
//
//  なのぼーどの実体
//
///////////////////////////////////////////////////////
なのぼーど実体= ”なのぼーど制御の実体”。
ナドボード実体:cmd = undef。
なのぼーど実体：__type = "なのぼーど実体OBJ"。
なのぼーど実体：nanoMode＝0。	// 0:標準   1:モータ−２個
なのぼーど実体：motorAPw＝0。
なのぼーど実体：motorAPwOrg＝0。
なのぼーど実体：motorBPwOrg＝0。
なのぼーど実体：motorBPw＝0。
なのぼーど実体：motorADir＝1。
なのぼーど実体：motorBDir＝1。
なのぼーど実体：lastMotorValue＝0。
なのぼーど実体：最終計測結果＝undef。
なのぼーど実体：チャンネル名称＝配列！ 作る。
「|;obj|
	obj=0.
	obj:データ名="抵抗D".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=1.
	obj:データ名="抵抗C".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=2.
	obj:データ名="抵抗B".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=3.
	obj:データ名="スイッチ".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=4.
	obj:データ名="抵抗A".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=5.
	obj:データ名="明るさ".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=6.
	obj:データ名="音".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=7.
	obj:データ名="スライダ".
	（なのぼーど実体：チャンネル名称）！（obj）書く。
	obj=15.
	obj:データ名="プレフィックス".
	（なのぼーど実体：チャンネル名称）！（obj）書く。	
」!実行。
なのぼーど実体：Isチャンネル名称？=「|name; ret|
	ret = false。
	(なのぼーど実体：チャンネル名称)!「|x| 「(x:データ名) == (name)」！なら「ret = true」実行 」それぞれ実行。
ret」。

なのぼーど実体:モード = 「|_mode|
	self:nanoMode = _mode。
」。
なのぼーど実体:反転= 「| motor ;pw|
		「(motor) ==  "M1"」!なら「
			self:motorADir = (self:motorADir) * (-1)。
			self!(motor)(self:motorAPwOrg) 回転 。
	　」そうでなければ「(motor) == "M2"」なら「
			self:motorBDir = (self:motorBDir) * (-1)。　
			self!(motor)(self:motorBPwOrg) 回転 。
	　」実行。

」。

//　[I]ごちゃごちゃしてきたので、次に変更を加える時は見直す。
なのぼーど実体:モータ出力設定 = 「| motor  pw; tmp_pw gain _min _max _negativeOffset|

	「(motor) ==  "M1"」!なら「self:motorAPwOrg = pw。」
			そうでなければ「self:motorBPwOrg = pw。」実行。
			
    //[D] システム！（”モーター出力設定：” ＋（pw））表示ダイアログ。
	gain = 1。_min = 0。_max = 127。_negativeOffset = 128。 _dir = 1。
	「(motor) ==  "M1"」!なら「
			pw = pw * (self:motorADir)。
	　」そうでなければ「motor == "M2"」なら「
	　  	//[D] システム！（"motorBDirをかけた:"+( self:motorBDir)）表示ダイアログ。
	　  	//[D] システム！（"始めのpw:"+(pw) ）表示ダイアログ。
			pw = pw * (self:motorBDir)。
			//[D] システム！（"計算後のpw:"+(pw) ）表示ダイアログ。
	　」実行。
	「pw > 127」!なら「pw = 127。」実行。
	　
     // [I] Mode2の時に書き換える（あまりいい方法ではないがとりあえず動かす。）
	「(self:nanoMode ) != 0」！なら「gain = 18。_min = 0。_max = 7。 _negativeOffset=8。」実行。
	
	//デバッグ！（"Mode:" + (self:nanoMode) + "-> gain="+ (gain) + "  _negativeOffset:"+(_negativeOffset)）書く。

		// [I]わかりにくいので後で見直す。
	「(pw) < 0 」！なら「
		pw = pw * (-1)。
		「pw > (127)」!なら「pw = (127)。」実行。
	」そうでなければ「
		_negativeOffset = 0。
	」実行。

	//[D] システム！（"motor:"+(motor) +"  pw:"+(pw) +"  gain:"+(gain) +"  _negativeOffset:"+(_negativeOffset)）表示ダイアログ。
	tmp_pw = floor(abs(pw) / (gain) ) + (_negativeOffset)。

	//[D] システム！（"floor(abs(pw) / (gain) )"+ (floor(abs(pw) / (gain) )) + "  tmp_pw:"+(tmp_pw) ）表示ダイアログ。
	
	//デバッグ！（"Debug:" + (motor) + "->floor(abs(pw) / (gain) )"+ (floor(abs(pw) / (gain) )) + "  tmp_pw:"+(tmp_pw)）書く。
	「motor == "M1"」！なら「
		self:motorAPw = tmp_pw。
	」そうでなければ「motor == "M2"」なら「
		self:motorBPw = tmp_pw。
	」実行。
	
self
」。

なのぼーど実体:回転 = 「| motor  pw; _motorValue|
	　self!(motor)  (pw) モータ出力設定。
	「(self:nanoMode ) == 0」！なら「
		self:lastMotorValue = (self:motorAPw)。
	」そうでなければ「
		self:lastMotorValue = (self:motorAPw) * 16 + (self:motorBPw) 。
	」実行。
	
	self:最終計測結果 = self!(self:lastMotorValue) 通信実行。
	
self
」。

なのぼーど実体：待つ＝「|time|
 「（self:cmd ）== undef」！なら「self:cmd = シリアルポート！1024 38400 作る。」実行。
（self:cmd ）!(time)待つ
」。
なのぼーど実体:計測実行＝「
	self:最終計測結果 = self!(self:lastMotorValue) 通信実行。
」。

なのぼーど実体:ひらけごま=「

　「（self:cmd ）== undef」！なら「self:cmd = シリアルポート！1024 38400 作る。」実行。
	（self:cmd ）！（システム！シリアルポート選択）開く。
	（self:cmd ）！ 2 待つ。
」。

なのぼーど実体:とじろごま=「「（self:cmd ）!= undef」！なら「（self:cmd ）!閉じる」実行。」。
なのぼーど実体：BYTE? = 「ret = undef.
 	//ラベル！(”&&&” )作る。
	「（（self:cmd ）!データ数？）==　０」！の間「self! 0.01　待つ」実行。
	 ret = (（self:cmd ）！ 1 値？)!文字コード.
	 //ラベル！(”%%%” )作る。
ret」。


なのぼーど実体：計測データ生成 = 「｜ch data ;obj｜
	obj = data。
	obj:ch = ch。
	obj:データ名 = "未定義"。
	（なのぼーど実体：チャンネル名称）!「|x| 
		「(x) == ch」！なら「obj:データ名 = (x:データ名)」実行。
	」それぞれ実行。
obj」。

なのぼーど実体：通信実行=「｜cmd ;ret_array｜
	//「self!存在？」!の間「self! 1 値？」実行。
	//ラベル！”通信実行” 作る 次の行。
	//ラベル！(”***” +(cmd) )作る 次の行。
	(self:cmd)!(cmd) 出力。
	//ラベル！(”###” )作る。
	ret_array　= 配列！作る。
	「｜ｘ;obj｜
		//ラベル！(”@@@” )作る。
		_1stByte = self！ BYTE?.
		//ラベル！(”_1stByte” +(_1stByte) )作る。
		_2ndByte = self！ BYTE?.
		
		「(_1stByte) < 128」！なら「
			システム！”通信エラーを確認しました。以後の動作は保障しません”表示ダイアログ.

			str = ":" + (x)+"> 1st:" +(_1stByte) +" 2nd:" +(_2ndByte).
			システム！（str）表示ダイアログ.
			（self:cmd ）!２　待つ。
		」実行。

		ch = floor( ((_1stByte) % 128) /8)。 
		data = (_1stByte) % 8 * 256 + (_2ndByte)。 
		
		obj = self! (ch) (data) 計測データ生成。
		ret_array:time = システム！システム秒？。
		ret_array!(obj)書く。
		ret_array:読む =「|name;ret|
			ret =　undef。
			self!「|x| 「(x:データ名) == (name)」！なら「ret = x」実行」それぞれ実行。
			「(ret) == undef」！なら「システム！"指定した名称のデータはありませんでした。" 実行」実行。

		ret」。
		
	」！　9　繰り返す。

ret_array」。


なのぼーど実体:計測値？=「|name;ret _diff|
	//ラベル！”計測値？”作る　次の行。
	ret = undef。
	_diff = undef。
	「((self:最終計測結果):time) != undef」！なら「_diff =  (システム！システム秒？) - ((self:最終計測結果):time)  」実行。
	「どれか！( (_diff) == undef) (  (_diff) > 0.05 )本当」！なら「
			//ラベル！("更新前" + (self:最終計測結果)) 作る　次の行。
			//ラベル！”計測を行う”作る　次の行。
			self:最終計測結果 = self!計測実行。
			//ラベル！("更新後" + (self:最終計測結果)) 作る　次の行。
	」そうでなければ「
		//ラベル！("ありえないケース" + (self:最終計測結果)) 作る　次の行。
	」実行。

	ret = (self:最終計測結果)!(name)読む。
ret」。


なのぼーど実体:データ名取得=「|sensor;ret|
	ret = undef。
	「どれか！(sensor=="光センサ") (sensor=="光センサー")本当」！なら「ret = "明るさ"」
        そうでなければ「どれか！( (sensor) == "音センサ") ( (sensor) == "音センサー") 本当」なら「ret = "音"」
        そうでなければ「どれか！( (sensor) == "ボリューム") ( (sensor) == "スライダ")   ( (sensor) == "スライダー")  本当」なら「ret = "スライダ"」
        そうでなければ「どれか！( (sensor) == "タッチセンサ") ( (sensor) == "プッシュボタン") 本当」なら「ret = "スイッチ"」
        そうでなければ「どれか！( (sensor) == "端子A") ( (sensor) == "A端子") 本当」なら「ret = "抵抗A"」
        そうでなければ「どれか！( (sensor) == "端子B") ( (sensor) == "B端子") 本当」なら「ret = "抵抗B"」
        そうでなければ「どれか！( (sensor) == "端子C") ( (sensor) == "C端子") 本当」なら「ret = "抵抗C"」
        そうでなければ「どれか！( (sensor) == "端子D") ( (sensor) == "D端子") 本当」なら「ret = "抵抗D"」実行。   
ret」。
	
なのぼーど実体:使う=「|name;obj|
	obj = undef。
	dataname = なのぼーど実体!(name) データ名取得。

	//モーター制御
	「(name) =="M1"」！なら「obj = __nanoMotorObject! (name) 作る。」
	そうでなければ「(name) =="M2"」なら「
		「(self:nanoMode) == 1」！なら「
			obj = __nanoMotorObject! (name) (self) 作る。
		」そうでなければ「
			システム！”なのぼーどのモード設定が正しくありません。見直してください。” 表示ダイアログ。
		」実行。
	」そうでなければ「
		obj = __nanoSensorObject! (dataname) (self)作る。
	」実行。
obj」。
	
なのぼーど実体:読む =「|name| 
	ret = self！"name" 計測値？。
	「(ret) == undef」！なら「
		システム！”「読む」で指定する名前が正しくありません。以後、正しい動作が保証出来ません” 表示ダイアログ。
		（self:cmd ）! 3 待つ。
	」実行。
 ret」。


///////////////////////////////////////////////////////
//
//  センサ
//
///////////////////////////////////////////////////////
__nanoSensorObject = "__nanoSensorObject"。
__nanoSensorObject :作る=「|name controller|
	obj = undef。
	「(self:controller)!(name)Isチャンネル名称？」！なら「
		obj = (name) + "センサーオブジェクト"。
	　obj:controller = controller。
		obj:type = (name)。
		obj:読む=「|;ret| ret = (self:controller)！(self:type)計測値？。 ret」。
	」そうでなければ「
		システム！"センサ名が正しくないため、オブジェクトを生成できません。" 表示ダイアログ。
	　なのぼーど実体！3 待つ。		// エラー処理なので意図的
	」実行。
obj」。


///////////////////////////////////////////////////////
//
//  モータ
//
///////////////////////////////////////////////////////
__nanoMotorObject = "__nanoSensorObject"。
__nanoMotorObject :作る=「|name  controller|
	obj = undef。
「どれか！（(name) == "M1"）（(name) == "M2"）本当」！なら「
		obj = (name) + "モーターオブジェクト"。
		obj:type = (name)。
		obj:controller = controller。
		obj:反転=「|pw| (self:controller)！(self:type) 反転。　self」。
		obj:回転=「|pw| (self:controller)！(self:type) (pw) 回転。　self」。
	」そうでなければ「
		システム！"モータ名が正しくないため、オブジェクトを生成できません。" 表示ダイアログ。
		なのぼーど実体！3 待つ。		// エラー処理なので意図的
	」実行。
obj」。

//システム！”dolittle_lib/mbot/mbotMain” 使う。			//多重定義になる可能性があるため上位で宣言する（見直すべき）

__mbotRGBLED="mbotLED"。
__mbotRGBLED: mode_ 		= 2。 	//　実行命令
__mbotRGBLED: ID_ 				= 8。	//  LED制御命令
__mbotRGBLED: ポート_ 		= 7。	//  オンボード　
__mbotRGBLED: スロット_ 	= 2。　//  スロット（とりあえず２みたい？）
__mbotRGBLED: 点灯レベル_ 	= 0。 　// 両方選択
__mbotRGBLED: 赤色レベル_ 	= 0。
__mbotRGBLED: 緑色レベル_ 	= 0。
__mbotRGBLED: 青色レベル_ 	= 0。

__mbotRGBLED:ポート＝「|port|   。
	「どれか！((port) == 7) ((port) == 1) ((port) == 2) ((port) == 3) ((port) == 4) 本当」！なら「self:ポート_ = (port)」
		そうでなければ「システム！”LEDのポート設定値が不正です。変更を行わずに実行します。” 表示ダイアログ。 __mbot実体! 2秒 待つ。」実行。

self」。

__mbotRGBLED:スロット＝「|slot|   。
	「どれか！((slot) =="スロット1") ((slot)  =="スロット2") 本当」！なら「
		_slot=2。
		「(slot) =="スロット1"」!なら「_slot=1。」実行。
		self:スロット_ = (_slot)。
		
	」そうでなければ「
		システム！”LEDのスロット設定値が不正です。変更を行わずに実行します。” 表示ダイアログ。 __mbot実体! 2秒 待つ。
	」実行。
self」。

__mbotRGBLED:LED選択＝「|dv|   。
	「どれか！((dv) =="両方") ((dv) =="LED1")  ((dv) =="LED2") 本当」！なら「|;tmp_dv|
		tmp_dv = 0。
		「(dv) =="LED1"」!なら「tmp_dv　=　1。」そうでなければ「(dv) =="LED2"」なら「 tmp_dv = 2。」実行。
		self:点灯レベル_  = (tmp_dv)。
		
	」そうでなければ「
		システム！”LED選択が不正です。変更を行わずに実行します。” 表示ダイアログ。 __mbot実体! 2秒 待つ。
	」実行。

self」。

__mbotRGBLED:実行＝「|r g b;_cmd|   。

	_cmd=""。
	_cmd:mode =(self:mode_)。
	_cmd:ID = (self:ID_)。
	_cmd:ポート = (self:ポート_)。
	_cmd:スロット = (self:スロット_)。
	_cmd:点灯レベル = (self:点灯レベル_)。
	_cmd:赤色レベル = mBotTools!(r)255 0 有効値強制補正。
	_cmd:緑色レベル = mBotTools!(g)255 0 有効値強制補正。
	_cmd:青色レベル = mBotTools!(b)255 0 有効値強制補正。
	self:赤色レベル_   = (_cmd:赤色レベル)。
	self:緑色レベル_  = (_cmd:緑色レベル)。
	self:青色レベル_   = (_cmd:青色レベル)。
	
	mbot!( _cmd )命令する。
self」。
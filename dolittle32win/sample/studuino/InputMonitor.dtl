 ////////////////////////////////////////////////////////////////////
// program:センサーの計測値をドリトル画面で確認するプログラム
// version: 1.0 (2016/09/08)
// since   : Ver.3.00
// author : Takuya Okumoto - Kanemune Lab.
// memo : 
///////////////////////////////////////////////////////////////////

システム！”dolittle_lib/Studuino/State_Disp”　使う。
システム！”dolittle_lib/Studuino/serial”使う。
システム！”dolittle_lib/Studuino/StuduinoManager”使う。

// プログラム転送
StuduinoManager! "dolittle_lib\Studuino\remote_control\remote_control.ino" "リモートコントロール用プログラムを転送しますか？" ビルド後に転送。

「（システム:osname）！"Mac OS" 含む？」！なら「port_name＝ (システム！ シリアルポート選択)。」
そうでなければ「「（システム:osname）！"Windows" 含む？」！なら「
		実行結果＝システム！　"cscript //nologo find_port.vbs" 実行。
		port_name＝実行結果! "[^COM0-9]" "" 全部置き換える。
」実行
」実行。



// 接続確認
ターミナル＝端末！（port_name） 作る。
IsValid = false.
test = ラベル！”未接続”作る。
「IsValid　== false」！の間「

　　　「ターミナル!存在？」！なら「
		data = (ターミナル! 1 値？)!文字コード。
		test！(data)書く。
　　　　　　　「（data）＝＝　32」！なら「IsValid = true. test！”接続済み”書く」実行。
　　　」実行。

」実行。

　
///////////////////////////////////////////////////
//
//
///////////////////////////////////////////////////

AD計測項目＝””。
AD計測項目：作る＝「| port_name  ;obj|
	obj＝”” + ""。
	obj：name  = "" + port_name。
	obj：ADボタン＝ボタン！(port_name)　作る　200 200 200　塗る 70 50 大きさ 0 0 位置。
	obj：ADボタン：IsInput＝false。
	obj：ADボタン:動作＝「
		「(self:IsInput) == true」！なら「
			self! 200 200 200　塗る　(黒) 文字色　。
			IsInput＝false。
		」そうでなければ「
			self!　（緑） 塗る　（赤）文字色。
			IsInput＝true。
		」実行
	」。
	obj：セレクタ＝選択メニュー！作る   120 50 大きさ 16 文字サイズ　”デジタル”　書く　"アナログ" 書く　80 0 位置。
	obj：表示ラベル＝ラベル！"---" 作る　50 50 大きさ（緑）塗る 210 0　位置  (青)　文字色　14 文字サイズ。
	obj：位置=「 |x y|
 		(self:ADボタン)!    (x) (y) 位置。
 		(self:セレクタ)!     (x+ 80) (y) 位置。
 		(self:表示ラベル)!  (x + 210) (y) 位置。
	」。
	obj： 入力選択？=「|;select|
	          select ="アウトプット"。
	         「(self：ADボタン：IsInput) ==  true」！なら「select = (self:セレクタ)! （(self:セレクタ)！何番目？）読む。」実行。
	　　　select
	」。
	obj： 書く=「 |x |　
		　　select =  (self:セレクタ)! （(self:セレクタ)！何番目？）読む。
		    「(self：ADボタン：IsInput) ==  false」！なら「
　			(self:表示ラベル)! "---" 書く　(色!　150 150 150 作る  ) 塗る
		       」そうでなければ「select== ”デジタル”」なら「
　　　　　　　　　　　　　　　　　　              「 x > 0」！なら「
	　　　　　　　　　　　　　　           　(self:表示ラベル)!  "ON " 書く　（黒）　文字色　(緑 ) 塗る
　　　　　　　　　　　　　　　　　　              　」そうでなければ「
　　　　　　　　　　　　　　　　　　　　　            　(self:表示ラベル)!  "OFF " 書く　（白）　文字色　(黒 ) 塗る
　　　　　　　　　　　　　　　　　　　             」実行。
		　　」そうでなければ「
		   　　　　　　  「ぜんぶ！(x >= 0)  ( x <= 255) 本当」！なら「
		　　　　　　　　　　　　 (self:表示ラベル)! (x) 書く　(色!　0 (x) 0 作る  ) 塗る
		     　　　　　　　 」そうでなければ「
　　　　　　　　　　　　　　　　　　　　　　　　　　　(self:表示ラベル)! "---" 書く　(色!　150 150 150 作る  ) 塗る
　　　　　　　　　　　　　　　　　　　　　　　」実行。
		　　　
		」実行。
		     
		 
	」。

	obj： 消える=「 
 		(self:ADボタン)!消える。
 		(self:セレクタ)! 消える。
 		(self:表示ラベル)! 消える。
	」。
	obj： 現れる=「 
 		(self:ADボタン)!現れる。
 		(self:セレクタ)! 現れる。
 		(self:表示ラベル)! 現れる。
	」。
obj
」。

D計測項目＝””。
D計測項目：作る＝「| port_name ;obj|
	obj＝”” + ""。
	obj：name = port_name。
	obj：Dボタン＝ボタン！(port_name)　作る　200 200 200　塗る　70 50 大きさ 0 0 位置。
	obj：Dボタン：IsInput＝false。
	obj：Dボタン:動作＝「
		「(self:IsInput) == true」！なら「
			self!　200 200 200　塗る　(黒) 文字色　。
			IsInput＝false。
		」そうでなければ「
			self!(緑)　塗る　（赤）文字色。
			IsInput＝true。
		」実行
	」。
	obj：表示ラベル＝ラベル！"---" 作る　50 50 大きさ　150 150 150  塗る　80 0　位置  (黒)　文字色　14 文字サイズ。
	obj：位置=「 |x y|
 		(self:Dボタン)!    (x) (y) 位置。
 		(self:表示ラベル)!  (x + 80) (y) 位置。
	」。
	obj： 書く=「 |x |　
	               「 x == "---"」！なら「
	　　　　　　　　　　　　(self:表示ラベル)!  "--- " 書く　（黒）　文字色　150 150 150  塗る
		　」そうでなければ「
	　　　　　　　　　　　「 x > 0」！なら「
	　　　　　　　　　　　　　　　(self:表示ラベル)!  "ON " 書く　（黒）　文字色　(緑 ) 塗る
　　　　　　　　　　　　　　　　　　　」そうでなければ「
　　　　　　　　　　　　　　　　　　　　　　(self:表示ラベル)!  "OFF " 書く　（白）　文字色　(黒 ) 塗る
　　　　　　　　　　　　　　　　　　　」実行。
　　　　　　　　　　　　」実行。
	」。
	obj： 入力選択？=「|;select|
	          select ="アウトプット"。
		「(self：Dボタン：IsInput) ==  true」！なら「select = ”デジタル”」実行。
	　　　select
	」。
	obj： 消える=「 
 		(self:Dボタン)!消える。
 		(self:表示ラベル)! 消える。
	」。
	obj： 現れる=「 
 		(self:Dボタン)!現れる。
 		(self:表示ラベル)! 現れる。
	」。
obj
」。



//////////////////////////////////////////
//
//
//////////////////////////////////////////
AD計測モード＝画面管理オブジェクト！　”AD計測モード”　追加。
AD計測モード：初期設定＝「
	アナログ項目初期位置_x　＝ -400。
	アナログ項目初期位置_y　＝ 300。
	「|i|
		「|j|  
			btn_name = "A" + ((4 *( i - 1)) + j -1)。
			obj = AD計測項目! ( btn_name ) 作る。
			obj ！(アナログ項目初期位置_x  +300 * (i - 1))  (アナログ項目初期位置_y + (j * - 60)) 位置。
			self！（btn_name）　（obj） 追加。
		」！ 4回　繰り返す。
	」! 2回　繰り返す。

	デジタル項目初期位置_x　＝ 200。
	デジタル項目初期位置_y　＝ 300。
	「|i|
		「|j|  
			btn_name = "D" + ((4 *( i - 1)) + j +4)。
			「”D5” == btn_name」！なら「btn_name = "D2"」実行。
			「”D6” == btn_name」！なら「btn_name = "D4"」実行。
			obj = D計測項目! ( btn_name) 作る。
			obj ！(デジタル項目初期位置_x  + 140 * (i - 1))  (デジタル項目初期位置_y + (j * - 60)) 位置。
			self！（btn_name ） （obj） 追加。
		」！ 4回　繰り返す。
	」! 2回　繰り返す。


	//obj=ボタン！”部品動作確認モード”　作る 　250 50 大きさ -400 -100 位置。
	//obj:動作=「画面管理オブジェクト！"部品動作確認モード" 選択。」。
	//self！"部品動作確認モードボタン" （obj） 追加。

」。


AD計測モード：描画更新＝「|;i j|
	「|i|
	       「|j;obj btn_name|  

		num =   ((4 *( i - 1)) + j -1)。
		btn_name = "A" +　num 。
		obj = self! (btn_name) 選択。

		「obj ！= 未定義」！なら「

		　　　「"デジタル" == (obj！入力選択？)」！なら「obj !(ターミナル！（A0ポート+ num） デジタル計測？) 書く」
		　　　そうでなければ　「"アナログ" == (obj！入力選択？)」なら
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　「obj !(ターミナル！（A0ポート+ num） アナログ計測？) 書く」
		　　　そうでなければ　「obj ! "---" 書く」実行。


		」実行。
	           」！ 4回　繰り返す。
	」! 2回　繰り返す。

	「|i|
	       「|j;obj btn_name|  
		num =  ((4 *( i - 1)) + j +4)。
		「5 == num」！なら「num = 2」
		そうでなければ「6 == num」なら「num = 4」実行。
		 btn_name = "D" +　num　。
		obj = self! (btn_name) 選択。

		portno =0。
		「2 == num」！なら「portno = 4」
		そうでなければ「4 == num」なら「portno = 5」
		そうでなければ「7 == num」なら「portno = 6」
		そうでなければ「8 == num」なら「portno = 7」
		そうでなければ「9 == num」なら「portno = 0」
		そうでなければ「10 == num」なら「portno = 1」
		そうでなければ「11 == num」なら「portno = 2」
		そうでなければ「12 == num」なら「portno = 3」実行。

		「obj ！= 未定義」！なら「

		　　　「"デジタル" == (obj！入力選択？)」！なら「obj !(ターミナル！（num） デジタル計測？) 書く」
		　　　そうでなければ「obj ! ("---") 書く」実行。
		」実行。
	           」！ 4回　繰り返す。
	」! 2回　繰り返す。

」。


////////////////////////////////////////////
部品動作確認モード＝画面管理オブジェクト！　”部品動作確認モード”　追加。
部品動作確認モード：初期設定＝「

	obj=ボタン！”AD計測モード”　作る 　250 50 大きさ -400 -100 位置。
	obj:動作=「画面管理オブジェクト！"AD計測モード" 選択。」。
	self！”AD計測モードボタン” （obj） 追加。

」。

///////////////////////////////////////////

画面管理オブジェクト！"AD計測モード" 選択。
